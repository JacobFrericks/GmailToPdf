var markLabelStr = "Payment Reciepts";
var tempLabelStr = "Temp - Payment Reciepts";
var folderId = "<Folder ID Here>";
var includeEmailLink = true;

///////// What is this script? /////////
// This script is meant to take the payment receipts you get in gmail and create 
// a pdf version of them in a given folder in your google drive. If you have the 
// Google Drive application on your computer, it will sync the PDF onto the computer. 
// You can use an automation program, such as Hazel, to take the pdf from that folder
// and back it up to a HDD if you want.

///////// HOW TO USE THIS SCRIPT /////////
// 1. Navigate to the Google Drive folder you wish to store the Receipts in
// 2. Copy the last part of the URL (ex: https://drive.google.com/#folders/<ID HERE>
// 3. Paste that folder ID into the "folderId" variable above
// 4. Create two labels, one for long term organization of your receipts, and another for temporary use
// 5. Copy the names of the two labels into the two variables "markLabelStr" and "tempLabelStr" above.
//    (Suggested names are already provided. Feel free to change them if you want)
function processInbox() {
  var tempLabel = GmailApp.getUserLabelByName(tempLabelStr);
  var markLabel = GmailApp.getUserLabelByName(markLabelStr);
  
  var tempThreads = tempLabel.getThreads();
  
  for (var i = 0; i < tempThreads.length; i++) {
    
      // Change labels, so it won't be reprocessed
      tempThreads[i].removeLabel(tempLabel).addLabel(markLabel);
      
      // Get the body of the message
      var msg = tempThreads[i].getMessages();
      var body = msg[0].getBody();
      
      // Create an HTML File from the Message Body
      var bodyText = body;
      if (includeEmailLink) {
        var bodyText = "https://mail.google.com/mail/u/0/#inbox/" + msg[0].getId() + "<br><br>" + body;
      }
    
      var bodydochtml = DocsList.getFolderById(folderId).createFile(msg[0].getSubject(), bodyText, "text/html");
      var bodyId = bodydochtml.getId();
 
      // Convert the HTML to PDF
      var bodydocpdf = bodydochtml.getAs('application/pdf');
      DocsList.getFolderById(folderId).createFile(bodydocpdf);
 
      // Trash the temporary HTML file
      DocsList.getFileById(bodyId).setTrashed(true);
    
  }
    
}